<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		creationComplete="skin1_creationCompleteHandler(event)" xmlns:BeatsSkin="Skins.BeatsSkin.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("HostComponents.BeatsHostComponent.BeatsHostComponent")]
	</fx:Metadata>
	
	<fx:Style>
		
		Tree {
		/* these three styles are inherited by the itemRenderer */
		line-alpha: 1;	
		line-color: #000000;
		line-style: solid;
		line-thickness: 1;
		/* these two styles make the tree lines look better */
		padding-top: 0;		/* default is 2 */
		padding-bottom: 0;	/* default is 2 */
		}
		
	</fx:Style>
	
	
	
	<fx:Script>
		<![CDATA[
			import Data.DataModel;
			
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			import spark.events.IndexChangeEvent;
			
			private var zooming:Boolean;
				
			[Bindable]
			public var mBeatContextMenu:ContextMenu;
			
			[Bindable]
			private var mSelctedAgentFacts:Vector.<Object> = new Vector.<Object>;
			
			protected function skin1_creationCompleteHandler(event:FlexEvent):void
			{
				mBeatsTree.contextMenu = hostComponent.treeContextMenu;
				mBeatChart.contextMenu = hostComponent.mBeatContextMenu;	
				hostComponent.drawBeatConnection();
			}
			
			
			
			
			protected function mBeatsTree_itemClickHandler(event:ListEvent):void
			{
				var item:Object = Tree(event.currentTarget).selectedItem;
				if (mBeatsTree.dataDescriptor.isBranch(item)) 
				{
					mBeatsTree.expandItem(item, !mBeatsTree.isItemOpen(item), true);
				}				
			}
			
			protected function renameItem(event:ListEvent):void
			{
				mBeatsTree.editable = true;
				mBeatsTree.editedItemPosition = {columnIndex:0, rowIndex:mBeatsTree.selectedIndex};
			}
			
			protected function tree1_itemEditEndHandler(event:ListEvent):void
			{
				mBeatsTree.editable = false;
			}
		
			protected function combobox1_changeHandler(event:IndexChangeEvent):void
			{
				trace(event);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				vaxis.minimum -= 500;
				haxis.minimum -= 500;
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				vaxis.maximum += 500;
				haxis.maximum += 500;
			}
			
			[Bindable]
			private var tmp:Array = new Array();
			
			
			protected function mBeatChart_dragCompleteHandler(event:DragEvent):void
			{
				
				
			}
			
			protected function mBeatChart_mouseMoveHandler(event:MouseEvent):void
			{
				if(mBeatChart.selectedChartItem)
				{
					mBeatChart.selectedChartItem.item.beatPosX = mouseX;
					mBeatChart.selectedChartItem.item.beatPosY = mouseY;
				}
			}
			
			protected function mBeatChart_dragStartHandler(event:DragEvent):void
			{
				trace(event);
				/*if(mBeatChart.selectedChartItem)
				{
					mBeatChart.selectedChartItem.fill.alpha;
					mBeatChart.selectedChartItem.item.beatPosY = mouseY;
				}*/
			}
			
			protected function mBeatChart_dragEnterHandler(event:DragEvent):void
			{
				trace(event);
//				event.dragSource.chartitems[0].element.visible = false;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:SolidColor id="sc1" color="yellow" alpha="1"/>
		<s:SolidColorStroke id="stroke1" color="black" weight="2"/>
		
		<s:Resize id="showBeatsTree" target="{mTreeBorderContainer}" widthTo="200" duration="500"/>
		<s:Resize id="hideBeatsTree" target="{mTreeBorderContainer}" widthTo="0" duration="500"/>
	</fx:Declarations>
	
	<s:Scroller width="100%" 
				height="100%">
		<s:VGroup width="100%" height="100%" id="VerticalContentGroup">
			<s:HGroup>
				<!--<s:TextInput id="mSearchField"
							 width="300"
							 prompt="Search"/>-->
				<BeatsSkin:SearchComponent id="mSearchField" mSearchFieldPromt="Search" depth="1000"/>
				<!--<s:ComboBox width="361" change="combobox1_changeHandler(event)"
							dataProvider="{mBetsTreeData}" labelField="name"/>-->
				<s:Button id="mRefreshSearch"
						  label="Refresh"/>
				
							 
			</s:HGroup>
			<s:HGroup width="100%">
				<s:BorderContainer id="mTreeBorderContainer"
								   width="200" 
								   height="100%" 
								   backgroundAlpha="0" 
								   borderStyle="inset" 
								   borderWeight="1">
					<s:HGroup width="100%" 
							  height="100%">
							<mx:Tree id="mBeatsTree" 
									 width="100%"
									 height="100%" 
									 allowMultipleSelection="true"
									 labelField="@name"
									 doubleClickEnabled="true"
									 dragEnabled="true"
									 dragMoveEnabled="true"
									 dropEnabled="true"
									 horizontalCenter="0"
									 itemDoubleClick="renameItem(event)"
									 itemEditEnd="tree1_itemEditEndHandler(event)"
									 showRoot="true"
									 borderVisible="false"
									 itemClick="mBeatsTree_itemClickHandler(event)"
									 contentBackgroundAlpha="0"
									 verticalScrollPolicy="auto"
									 itemRenderer="Skins.BeatsSkin.TreeItemLinesRenderer">
									<mx:XMLListCollection id="mBetsTreeData">
									<fx:XMLList id="mXmlList">
										<Description name="ODN">
											<folder name="Group 1: Description"/>
											<folder name="Group 2: Description">
												<Pfolder name="test1"/>
												<Pfolder name="test 2"/>
											</folder>
										</Description>
									</fx:XMLList>
								</mx:XMLListCollection>
							</mx:Tree>
					</s:HGroup>
				</s:BorderContainer>
				<s:ToggleButton id="mTreeStateBtn"
								skinClass="Skins.SwitchButtonSkin.SwitchToggleButtonSkin"/>
				<s:BorderContainer id="mBeatsGraphBorderContainer"
								   width="100%"
								   height="100%">
					<mx:Canvas id="mBubbleCanvas" label="Canvas 2" width="100%" height="100%" > 
						<!--<mx:Panel height="100%" width="100%">-->	
							<s:Group width="100%">
								
								<mx:BubbleChart id="mBeatChart" 
												height="100%" width="100%"
												paddingRight="5" paddingLeft="5" 
												showDataTips="false"
												dataProvider="{DataModel.getSingleton().mBubbleBeatData}"
												showAllDataTips="false"
												dragEnabled="true"
												dragMoveEnabled="true"
												dropEnabled="true"
												selectionMode="multiple" color="0xFFFFFF" 
												backgroundElements="{tmp}"
												dragComplete="mBeatChart_dragCompleteHandler(event)" mouseMove="mBeatChart_mouseMoveHandler(event)" dragStart="mBeatChart_dragStartHandler(event)" dragEnter="mBeatChart_dragEnterHandler(event)">
								
									<!--<mx:annotationElements>
										<mx:CartesianDataCanvas id="canvas" includeInRanges="true"/>
									</mx:annotationElements>-->								
									<!--ZOOM-->
									<mx:horizontalAxis>
										<mx:LinearAxis id="haxis"/>
									</mx:horizontalAxis>
									<mx:verticalAxis>
										<mx:LinearAxis id="vaxis"/>
									</mx:verticalAxis>	
									<!--end ZOOM-->	
									<mx:series>
										<mx:BubbleSeries id="mBeatSeries" 
														 xField="beatPosX" 
														 yField="beatPosY" 
														 radiusField="beatRadius"
														 fill="{sc1}"
														 stroke="{stroke1}"
														 itemRenderer="Render.BeatRender.BeatRender"/>
									</mx:series> 									
								</mx:BubbleChart>            
								<!--<mx:Legend dataProvider="{mBeatChart}"/>-->
								<s:HGroup width="100%" horizontalAlign="right">
									<s:Button id="mAddBeat" x="-6" width="80" label="Add beat"/>
									<s:VGroup horizontalAlign="center">
										<s:Button width="35" label="-" click="button1_clickHandler(event)"/>
										<s:Button width="35" label="+" click="button2_clickHandler(event)"/>
									</s:VGroup>
								</s:HGroup>
							</s:Group>
							            
						<!--</mx:Panel>-->
					</mx:Canvas>	
				</s:BorderContainer>
			</s:HGroup>
			
			
			<s:HGroup width="100%" right="10">
				<s:VGroup width="100%">
					<!--<s:DropDownList id="mAgentList"
					labelField="label"
					width="90"
					prompt="Select agent"/>-->
					<!-- here must be visualization component of connections... -->
					<s:Label text="Description:"/>
					<s:TextArea id="mBeatDescriptionField"
								width="100%"
								height="76"
								prompt="Enter description"/>
					<s:HGroup width="100%" 
							  verticalAlign="middle">
						<s:HGroup width="100%" 
								  verticalAlign="middle">
							<s:Label text="Agent:"/>
							<s:DropDownList id="mChooseAgentList"
											width="200"
											prompt="Choose agent"
											labelField="name"
											dataProvider="{DataModel.getSingleton().mAgentsList}"/>	
						</s:HGroup>
						<s:HGroup width="100%"
								  horizontalAlign="center"
								  verticalAlign="middle">
							<s:Label text="XGML Theme:"/>
						</s:HGroup>
						<s:HGroup width="100%"
								  horizontalAlign="right">
							<s:DropDownList id="mBeatTheme" x="-38" width="200"
											
											prompt="Choose XGML theme"/>
						</s:HGroup>	
					</s:HGroup>
					
					<s:HGroup width="100%"
							  verticalAlign="middle">
						<s:Label width="33" text="Type:"/>
						<s:DropDownList id="mTypeList"
										width="200"
										selectedItem="normal"
										dataProvider="{hostComponent.beatTypeList}"/>	
						<s:HGroup width="100%"
								  verticalAlign="middle">
							<s:HGroup width="118" horizontalAlign="left">
								<s:Label text="Priority:" paddingLeft="20"/>	
							</s:HGroup>
							<s:HGroup width="100%"
									  horizontalAlign="left">
								<s:TextInput id="mPriorityField"
											 text="0"
											 width="50"
											 restrict="0-9"
											 maxChars="3"/>
							</s:HGroup>
						</s:HGroup>
					</s:HGroup>
					<s:Label text="Activities:"/>
					<s:List id="mActivitiesList"
								width="100%" labelField="activities"/>
					<s:HGroup width="100%"
							  horizontalAlign="center">
						<s:Button id="mSave"
								  label="SAVE" 
								  width="100%"/>
						<s:Button id="mDelete"
								  label="DELETE" 
								  width="100%"/>
					</s:HGroup>
				</s:VGroup>
				<s:VGroup width="100%">
					<s:Label text="Preconditions" 
							 fontWeight="bold" 
							 fontSize="14" 
							 color="0x000000"/>
					<s:HGroup verticalAlign="middle">
						<s:Label text="Beats completed:"/>
						<s:TextInput id="mBeatsCompletedField"
									 prompt="Comma - separated list fo ids"
									 width="300"/>	
					</s:HGroup>
					<s:HGroup
						verticalAlign="middle">
						<s:HGroup width="92" horizontalAlign="left">
							<s:Label text="Location:"/>	
						</s:HGroup>
						<s:DropDownList id="mLocationList"
										width="120"
										prompt="Choose location"
										labelField="name"
										dataProvider="{DataModel.getSingleton().mLocationsList}"/>
					</s:HGroup>
					<s:Spacer/>
					<s:Spacer/>
					<s:Spacer/>
					<s:Spacer/>
					<s:HGroup width="100%"
							  horizontalAlign="left"
							  verticalAlign="middle" top="100">
						<s:HGroup width="100">
							<s:Label text="Affinity:" 
									 textAlign="center"/>	
						</s:HGroup>
						<s:HGroup>
							<s:TextInput id="mAffinityMinField"
										 text="0"
										 width="50"
										 restrict="0-9"
										 maxChars="3"/>
							<s:TextInput id="mAffinityMaxField"
										 text="0"
										 width="50"
										 restrict="0-9"
										 maxChars="3"/>	
						</s:HGroup>
						
					</s:HGroup>
					<s:HGroup width="100%"
							  horizontalAlign="left"
							  verticalAlign="middle">
						<s:HGroup width="100">
							<s:Label text="Nerve:" 
									 textAlign="left"/>	
						</s:HGroup>
						<s:HGroup>
							<s:TextInput id="mNerveMinField" 
										 text="0"
										 width="50"
										 restrict="0-9"
										 maxChars="3"/>
							<s:TextInput id="mNerveMaxField"
										 text="0"
										 width="50"
										 restrict="0-9"
										 maxChars="3"/>	
						</s:HGroup>
					</s:HGroup>
					
					<s:Label text="Preconditions function"/>
					<s:TextArea id="mPreconditionsFunction" width="100%" height="111"/>
				</s:VGroup>	
			</s:HGroup>	
		</s:VGroup>
	</s:Scroller>
</s:Skin>
