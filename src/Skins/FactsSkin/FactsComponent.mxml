<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("HostComponents.FactsHostComponent.FactsHostComponent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import HttpService.HttpServiceManager;
			
			import mx.events.DataGridEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.EmailValidator;
			
			import spark.events.GridItemEditorEvent;
			protected function button1_clickHandler(event:MouseEvent):void
			{
				HttpServiceManager.httpService.addEventListener(ResultEvent.RESULT, getRes);
			}
			
			private function getRes(event:ResultEvent):void
			{
				var tmp:Object;
				tmp = JSON.parse(event.result as String);
				trace(tmp);
			}
			
			protected function mAgentsList_clickHandler(event:MouseEvent):void
			{
				var mContextMenuItem:ContextMenuItem = new ContextMenuItem("Copy Data");
				mContextMenuItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, copyData);
				
				var mContextMenu:ContextMenu = new ContextMenu();
				mContextMenu.hideBuiltInItems();
				mContextMenu.customItems = [mContextMenuItem];
				
				contextMenu = mContextMenu;
				
			}
			
			private function copyData(event:ContextMenuEvent):void
			{
				System.setClipboard(mAgentsList.selectedItem);	
			}
			
			protected function mFactsList_gridItemEditorSessionStartHandler(event:GridItemEditorEvent):void
			{
				trace(event);
			}
			
			protected function mFactsList_gridItemEditorSessionStartingHandler(event:GridItemEditorEvent):void
			{
				trace("starting" + event);
			}
			
						
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			
		]]>
	</fx:Script>
	<s:VGroup>
		<s:HGroup>
			<s:DropDownList id="characterList"
							labelField="data"
							dataProvider="{hostComponent.mFactsListData}"
							prompt="Select character"
							width="300"/>	
			<s:Button id="mAddFact"
					  label="+Fact"/>
			<s:Button id="mDeleteFact"
					  label="-Fact"/>
		</s:HGroup>
		<!--Start Horizontal group of components-->
		<s:HGroup>
			<!--Start Datagrid-->
			<s:DataGrid id="mFactsList" 
						minWidth="300"
						maxWidth="300"
						minHeight="300"
						maxHeight="300"
						borderVisible="false"
						editable="true"
						selectionMode="multipleRows"
						sortableColumns="true"
						resizableColumns="false"
						dataProvider="{hostComponent.mFactsListData}">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn dataField="data" headerText="Id"/>
						<s:GridColumn dataField="data" headerText="xgmlId"/>
						<s:GridColumn dataField="desc" headerText="Description"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<!--end DataGrid-->
			<s:VGroup>
				<s:Label text="ID in XGML:"/>
				<s:TextInput id="mFactsIdLabel"
						 	 text="{mFactsList.selectedItem.data}"
							 editable="false" 
							 selectable="false"/>		
				<s:Label text="Description:"/>
				<s:TextArea id="mFactsDescriptionArea"
							text="{mFactsList.selectedItem.desc}"/>
			</s:VGroup>
			<s:HGroup>
				<s:VGroup>
					<s:Label text="Agents:"/>
					<s:List id="mAgentsList"
							minWidth="300"
							maxWidth="300"
							minHeight="300"
							maxHeight="300"
							labelField="label"
							allowMultipleSelection="true"
							dataProvider="{hostComponent.mFactsListData}"/>
					<s:HGroup width="100%">
						<s:Button id="mAddFactOwner"
								  label="&lt;&lt;" width="100%"/>
						<s:Button id="mRemoveFactOwner"
								  label="&gt;&gt;"
								  width="100%"/>
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
			
		</s:HGroup>
		<!--end Horizontal group of components-->
	</s:VGroup>
	
	
	
	
	
</s:Skin>
